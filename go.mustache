package main

import "fmt"
import "net/http"
{{#body.has_json_body}}
import "encoding/json"
{{/body.has_json_body}}

func main() {
    // {{{request.name}}} ({{{request.method}}} {{{url.base}}})
    
    client := &http.Client{}
    req, err := http.NewRequest("{{{request.method}}}", "{{{url.base}}}", nil)
    
    {{#url.has_params}}
    {{#url.params}}
    req.FormValue "{{{name}}}" "{{{value}}}",
    {{/url.params}}
    {{/url.has_params}}
    {{! ----- }}
    {{! 
    Header = map[string][]string{
    //		"Accept-Encoding": {"gzip, deflate"},
    //		"Accept-Language": {"en-us"},
    //		"Connection": {"keep-alive"},
    //	}
    }}
    {{#headers.has_headers}}
    {{#headers.header_list}}
    req.Header.Add("{{{header_name}}}", `{{{header_value}}}`)
    {{/headers.header_list}}
    {{/headers.has_headers}}
    {{! ----- }}
    {{#body.has_raw_body}}
    req.ParseForm
    req.body = "{{{body.raw_body}}}"
    {{/body.has_raw_body}}
    {{! ----- }}
    {{#body.has_long_body}}
    data = "" # set your body string
    req.body = data
    {{/body.has_long_body}}
    {{! ----- }}
    {{#body.has_url_encoded_body}}
    data = {
    {{#body.url_encoded_body}}
        "{{{name}}}" => "{{{value}}}",
    {{/body.url_encoded_body}}
    }
    req.body = data
    {{/body.has_url_encoded_body}}
    {{! ----- }}
    {{#body.has_multipart_body}}
    files = {
    {{#body.multipart_body}}
        "{{{name}}}" => "{{{value}}}",
    {{/body.multipart_body}}
    }
    req.form_data = files
    {{/body.has_multipart_body}}
    {{! ----- }}
    {{#body.has_json_body}}
    data = JSON.dump({{{body.json_body_object}}})
    req.body = data
    {{/body.has_json_body}}
    
    resp, err := client.Do(req)
    if err != nil {
        fmt.Println("Failure : ", err)
    }
    fmt.Println("response Status : ", resp.Status)
    fmt.Println("response Headers : ", resp.Header)
    fmt.Println("response Body : ", resp.Body)
}
